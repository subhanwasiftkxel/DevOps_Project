# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs




name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: ${{matrix.node_version}}
    - name: Install dependencies
      run: npm install
    - name: run server
      run : node main.js &
      

  terraform:
    name: 'Terraform Apply'
    env:
      # AWS secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_DEVOPS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest
    environment: production
    needs: build # This ensures the Terraform job runs after the build job completes
    


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Format the terraform
      run: terraform fmt
      


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.1
    - name: make inventroy file
      run: touch inventory.txt

    - name: Terraform Init
      run: terraform init
      

    - name: Terraform Plan
      run: terraform plan 

    - name: Terraform Apply
      run: terraform apply --auto-approve


    - name: check ips
      run: cat inventory.txt
      
    - name: Check if inventory file exists
      run: ls 






